# Generated by Django 2.2.9 on 2020-06-05 08:43

import uuid

import ckeditor_uploader.fields
import django.contrib.postgres.indexes
import django.utils.timezone
import model_utils.fields
import modeltrans.fields
from django.db import migrations, models

import mcod.core.db.mixins


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LabEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('published', 'Published'), ('draft', 'Draft')],
                                                          default='published', max_length=100, no_check_for_status=True,
                                                          verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status',
                                                                   verbose_name='status changed')),
                ('is_removed', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=600)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('removed_at',
                 model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='is_removed', when={True})),
                ('published_at', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status',
                                                                 when={'published'})),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('event_type',
                 models.CharField(choices=[('analysis', 'Analysis'), ('research', 'Research')], default='analysis',
                                  max_length=10, verbose_name='Event type')),
                ('notes', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Notes')),
                ('execution_date', models.DateField()),
                ('i18n', modeltrans.fields.TranslationField(fields=('title', 'notes', 'slug'), required_languages=(),
                                                            virtual_fields=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'lab_event',
                'default_manager_name': 'objects',
            },
            bases=(mcod.core.db.mixins.ApiMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('published', 'Published'), ('draft', 'Draft')],
                                                          default='published', max_length=100, no_check_for_status=True,
                                                          verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status',
                                                                   verbose_name='status changed')),
                ('is_removed', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=600)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('removed_at',
                 model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='is_removed', when={True})),
                ('published_at', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status',
                                                                 when={'published'})),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Report Link')),
                ('file', models.FileField(blank=True, max_length=2000, null=True, upload_to='', verbose_name='File')),
                ('i18n',
                 modeltrans.fields.TranslationField(fields=('slug',), required_languages=(), virtual_fields=True)),
                ('lab_event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='reports',
                                                to='laboratory.LabEvent')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'lab_report',
                'default_manager_name': 'objects',
            },
            bases=(mcod.core.db.mixins.ApiMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='labevent',
            index=django.contrib.postgres.indexes.GinIndex(fields=['i18n'], name='lab_event_i18n_267a98_gin'),
        ),
        migrations.CreateModel(
            name='LabEventTrash',
            fields=[
            ],
            options={
                'verbose_name': 'Trash',
                'verbose_name_plural': 'Trash',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('laboratory.labevent',),
        ),
        migrations.AddIndex(
            model_name='report',
            index=django.contrib.postgres.indexes.GinIndex(fields=['i18n'], name='lab_report_i18n_44a7ee_gin'),
        ),
    ]
