# Generated by Django 2.2.9 on 2020-07-21 09:50

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mcod.core.db.mixins
import mcod.core.storages
import model_utils.fields
import modeltrans.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0023_auto_20200219_1636'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('applications', '0016_auto_20200417_0907'),
    ]

    operations = [
        migrations.AddField(
            model_name='application',
            name='external_datasets',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='external datasets'),
        ),
        migrations.AddField(
            model_name='application',
            name='image_on_list',
            field=models.ImageField(blank=True, max_length=200, null=True, storage=mcod.core.storages.ApplicationImagesStorage(base_url=None, location=None), upload_to='image_on_list/%Y%m%d', verbose_name='image on list'),
        ),
        migrations.AlterField(
            model_name='application',
            name='title',
            field=models.CharField(max_length=300, verbose_name='title'),
        ),
        migrations.CreateModel(
            name='ApplicationProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('published', 'Published'), ('draft', 'Draft')], default='published', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('is_removed', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=600)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('removed_at', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='is_removed', when={True})),
                ('published_at', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', when={'published'})),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=300, verbose_name='title')),
                ('notes', models.TextField(null=True, verbose_name='Notes')),
                ('author', models.CharField(blank=True, max_length=50, null=True, verbose_name='Author')),
                ('url', models.URLField(max_length=300, null=True, verbose_name='App URL')),
                ('external_datasets', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='external datasets')),
                ('applicant_email', models.EmailField(blank=True, max_length=254, verbose_name='applicant email')),
                ('image', models.ImageField(blank=True, max_length=200, null=True, storage=mcod.core.storages.ApplicationImagesStorage(base_url=None, location=None), upload_to='proposals/image/%Y%m%d', verbose_name='image URL')),
                ('image_on_list', models.ImageField(blank=True, max_length=200, null=True, storage=mcod.core.storages.ApplicationImagesStorage(base_url=None, location=None), upload_to='proposals/image_on_list/%Y%m%d', verbose_name='image on list')),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None, verbose_name='keywords')),
                ('report_date', models.DateField(verbose_name='report date')),
                ('decision', models.CharField(blank=True, choices=[('accepted', 'proposal accepted'), ('rejected', 'proposal rejected')], max_length=8, verbose_name='decision')),
                ('decision_date', models.DateField(blank=True, null=True, verbose_name='decision date')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('i18n', modeltrans.fields.TranslationField(fields=('slug',), required_languages=(), virtual_fields=True)),
                ('application', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.Application', verbose_name='application')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_proposals_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('datasets', models.ManyToManyField(blank=True, related_name='application_proposals', to='datasets.Dataset', verbose_name='datasets')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_proposals_modified', to=settings.AUTH_USER_MODEL, verbose_name='modified by')),
            ],
            options={
                'verbose_name': 'Application Proposal',
                'verbose_name_plural': 'Application Proposals',
                'abstract': False,
                'default_manager_name': 'objects',
            },
            bases=(mcod.core.db.mixins.AdminMixin, mcod.core.db.mixins.ApiMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ApplicationProposalTrash',
            fields=[
            ],
            options={
                'verbose_name': 'Application Proposal Trash',
                'verbose_name_plural': 'Application Proposals Trash',
                'abstract': False,
                'proxy': True,
                'default_manager_name': 'objects',
                'indexes': [],
                'constraints': [],
            },
            bases=('applications.applicationproposal',),
        ),
    ]
