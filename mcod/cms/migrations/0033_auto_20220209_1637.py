# Generated by Django 2.2.9 on 2022-02-09 15:37

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import mcod.core.db.mixins
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('cms', '0032_auto_20220208_1725'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_en', models.CharField(blank=True, help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('seo_title_en', models.CharField(blank=True, help_text="Optional. 'Search Engine Friendly' title. This will appear at the top of the browser window.", max_length=255, null=True, verbose_name='page title')),
                ('search_description_en', models.TextField(blank=True, null=True, verbose_name='search description')),
                ('draft_title_en', models.CharField(editable=False, max_length=255, null=True)),
                ('body', ckeditor.fields.RichTextField(blank=True, verbose_name='Notes')),
                ('body_en', ckeditor.fields.RichTextField(blank=True, verbose_name='Notes')),
                ('author', models.CharField(blank=True, max_length=50, verbose_name='Author')),
                ('author_en', models.CharField(blank=True, max_length=50, verbose_name='Author')),
                ('views_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Aktualności',
                'verbose_name_plural': 'Aktualności',
                'abstract': False,
            },
            bases=(mcod.core.db.mixins.ApiMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='NewsPageIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_en', models.CharField(blank=True, help_text="The page title as you'd like it to be seen by the public", max_length=255, null=True, verbose_name='title')),
                ('seo_title_en', models.CharField(blank=True, help_text="Optional. 'Search Engine Friendly' title. This will appear at the top of the browser window.", max_length=255, null=True, verbose_name='page title')),
                ('search_description_en', models.TextField(blank=True, null=True, verbose_name='search description')),
                ('draft_title_en', models.CharField(editable=False, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Lista aktualności',
                'verbose_name_plural': 'Listy aktualności',
            },
            bases=(mcod.core.db.mixins.ApiMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='NewsTagEn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items_en', to='cms.NewsPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_newstagen_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.NewsPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_newstag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='newspage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Lista słów kluczowych oddzielonych przecinkami.', related_name='news_page', through='cms.NewsTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='newspage',
            name='tags_en',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Lista słów kluczowych oddzielonych przecinkami.', related_name='news_page_en', through='cms.NewsTagEn', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
